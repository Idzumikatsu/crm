/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id("org.springframework.boot") version "3.5.0"
    id("io.spring.dependency-management") version "1.1.4"
    java
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    implementation(libs.org.springframework.boot.spring.boot.starter.web)
    implementation(libs.org.springframework.boot.spring.boot.starter.thymeleaf)
    implementation(libs.org.thymeleaf.extras.thymeleaf.extras.springsecurity6)
    implementation(libs.org.springframework.boot.spring.boot.starter.data.jpa)
    implementation(libs.org.postgresql.postgresql)
    implementation(libs.org.flywaydb.flyway.core)
    implementation(libs.org.flywaydb.flyway.database.postgresql)
    implementation(libs.org.springframework.boot.spring.boot.starter.jdbc)
    implementation(libs.org.springframework.boot.spring.boot.starter.security)
    implementation(libs.org.springframework.boot.spring.boot.starter.validation)
    implementation(libs.org.springframework.boot.spring.boot.starter.quartz)
    implementation(libs.org.springframework.boot.spring.boot.starter.mail)
    implementation(libs.org.apache.poi.poi.ooxml)
    implementation(libs.org.mapstruct.mapstruct)
    implementation(libs.otp.java)
    implementation(libs.aerogear.otp)
    annotationProcessor(libs.org.mapstruct.mapstruct.processor)
    testAnnotationProcessor(libs.org.mapstruct.mapstruct.processor)
    implementation(libs.io.jsonwebtoken.jjwt.api)
    implementation(libs.org.springdoc.springdoc.openapi.starter.webmvc.ui)
    runtimeOnly(libs.io.jsonwebtoken.jjwt.impl)
    runtimeOnly(libs.io.jsonwebtoken.jjwt.jackson)
    testImplementation(libs.com.h2database.h2)
    testImplementation(libs.org.springframework.boot.spring.boot.starter.test)
    testImplementation(libs.org.springframework.security.spring.security.test)
    testImplementation(libs.org.seleniumhq.selenium.selenium.java)
    testImplementation(libs.org.seleniumhq.selenium.htmlunit.driver)
}

group = "com.example"
version = "0.0.1-SNAPSHOT"
description = "schedule-tracker"
java.sourceCompatibility = JavaVersion.VERSION_21


tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}
