# Requires secrets:
#   VPS_HOST, VPS_USER, VPS_SSH_KEY, VPS_PASSPHRASE
#   (optional) VPS_PORT ‚Äì –µ—Å–ª–∏ SSH-–ø–æ—Ä—Ç –Ω–µ 22

name: Deploy to VPS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Temurin JDK 21
    - name: Setup Temurin JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 21

    # 3. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–æ–∫—Å–∏ –¥–ª—è Maven –∏ Git
    - name: Setup proxy
      run: scripts/setup-proxy.sh
      env:
        PROXY_HOST: ${{ secrets.PROXY_HOST }}
        PROXY_PORT: ${{ secrets.PROXY_PORT }}

    # 4. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –∏ —Å–æ–±–∏—Ä–∞–µ–º JAR
    - name: Build with tests
      run: mvn -B clean package

    # 5. –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç ‚Üí app.jar (—á—Ç–æ–±—ã Dockerfile –µ–≥–æ –Ω–∞—à—ë–ª)
    - name: Prepare artifact
      run: cp target/*.jar target/app.jar

    # 6. –ö–æ–ø–∏—Ä—É–µ–º Dockerfile –∏ docker-compose.yml –Ω–∞ VPS (–≤ –∫–æ—Ä–µ–Ω—å /root/myapp)
    - name: Copy infra files to VPS
      if: ${{ hashFiles('Dockerfile', 'docker-compose.yml') != '' }}
      uses: appleboy/scp-action@v0.1.4
      with:
        host:       ${{ secrets.VPS_HOST }}
        username:   ${{ secrets.VPS_USER }}
        key:        ${{ secrets.VPS_SSH_KEY }}
        passphrase: ${{ secrets.VPS_PASSPHRASE }}
        # üõë –ï—Å–ª–∏ –≤–∞—à SSH-–ø–æ—Ä—Ç ‚Äì –Ω–µ 22, —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–æ–∫—É –Ω–∏–∂–µ:
        # port:     ${{ secrets.VPS_PORT }}
        source: "Dockerfile,docker-compose.yml,wait-for-db.sh"
        target: /root/myapp
        rm:     true

    # 7. –ö–æ–ø–∏—Ä—É–µ–º —Å–∞–º app.jar –Ω–∞ VPS
    - name: Copy app.jar to VPS
      uses: appleboy/scp-action@v0.1.4
      with:
        host:       ${{ secrets.VPS_HOST }}
        username:   ${{ secrets.VPS_USER }}
        key:        ${{ secrets.VPS_SSH_KEY }}
        passphrase: ${{ secrets.VPS_PASSPHRASE }}
        # port:     ${{ secrets.VPS_PORT }}
        source:     target/app.jar
        target:     /root/myapp/app.jar
        rm:         true

    # 8. –°–æ–±–∏—Ä–∞–µ–º Docker-–æ–±—Ä–∞–∑ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–µ—Ä–µ–∑ SSH
    - name: Docker Compose up
      uses: appleboy/ssh-action@v1.0.0
      with:
        host:       ${{ secrets.VPS_HOST }}
        username:   ${{ secrets.VPS_USER }}
        key:        ${{ secrets.VPS_SSH_KEY }}
        passphrase: ${{ secrets.VPS_PASSPHRASE }}
        # port:     ${{ secrets.VPS_PORT }}
        script: |
          set -e
          cd /root/myapp
          # remove any leftover containers using the app port
          docker ps -aqf "name=myapp_app_1" | xargs -r docker rm -f
          # if any other container is using port 8080, force remove it
          docker ps -q --filter "publish=8080" | xargs -r docker rm -f
          docker-compose down --remove-orphans
          docker-compose build --no-cache
          docker-compose up -d
