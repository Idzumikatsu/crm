name: CI/CD to VPS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build and test
        run: |
          echo "Здесь должны быть команды сборки и тестирования"
          # Например для Node.js: npm ci && npm test
          # Для Python: pip install -r requirements.txt && pytest
          # Для Go: go test ./...

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          script_stop: true
          debug: true
          script: |
            set -e
            if [ ! -d /opt/myapp ]; then
              git clone ${{ github.server_url }}/${{ github.repository }} /opt/myapp
            fi
            cd /opt/myapp
            git fetch --all
            git reset --hard origin/main

            if [ -f package.json ]; then npm ci --production; fi
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            if [ -f go.mod ]; then go build -o myapp; fi

            if [ ! -f /etc/systemd/system/myapp.service ]; then
              cat <<'UNIT' > /etc/systemd/system/myapp.service
            [Unit]
            Description=MyApp Service
            After=network.target

            [Service]
            Type=simple
            WorkingDirectory=/opt/myapp
            ExecStart=/usr/bin/env bash -c '/opt/myapp/start.sh'
            Restart=always
            RestartSec=5

            [Install]
            WantedBy=multi-user.target
            UNIT
              systemctl daemon-reload
              systemctl enable myapp.service
            fi

            systemctl restart myapp.service
