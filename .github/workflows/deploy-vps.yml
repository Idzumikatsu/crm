name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: npm ci
        working-directory: frontend

      - name: Lint frontend
        run: npm run lint
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

      - name: Run backend tests
        run: ./gradlew test
        working-directory: backend

      - name: Build backend JAR
        run: ./gradlew bootJar
        working-directory: backend

      - name: Archive backend JAR
        uses: actions/upload-artifact@v3
        with:
          name: schedule-app-jar
          path: backend/build/libs/*.jar

      # --- Деплой на VPS ---
      - name: Clean old app on VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            sudo rm -rf /opt/schedule-app/*
            # Убедимся, что установлен Java 21
            if ! java -version 2>&1 | grep '21'; then
              echo 'ERROR: Java 21 not found on VPS'; exit 1;
            fi

      - name: Deploy JAR to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          source: "backend/build/libs/*.jar"
          target: "/opt/schedule-app"
          strip_components: 3
          overwrite: true

      - name: Upload systemd unit
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          source: "infra/systemd/schedule-app.service"
          target: "/etc/systemd/system"
          strip_components: 2
          overwrite: true

      - name: Configure environment file on VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            sudo tee /etc/schedule-app.env > /dev/null <<EOF
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            # ... добавьте другие секреты по необходимости
            EOF
            sudo chown root:root /etc/schedule-app.env
            sudo chmod 640 /etc/schedule-app.env

      - name: Restart service
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          passphrase: ${{ secrets.VPS_PASSPHRASE }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            sudo systemctl daemon-reload
            sudo systemctl enable schedule-app
            sudo systemctl restart schedule-app
