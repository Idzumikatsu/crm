name: Deploy to Kubernetes

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install root dependencies
        run: npm ci

      - name: Build Tailwind CSS
        run: npm run build

      - name: Install frontend dependencies
        run: npm ci
        working-directory: frontend

      - name: Lint and build frontend
        run: |
          npm run lint:fix
          npm run lint
          npm run build
        working-directory: frontend

      - name: Build backend JAR
        run: ./gradlew bootJar
        working-directory: backend

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker images
        run: |
          docker build -t ghcr.io/idzumikatsu/trash/backend:${GITHUB_SHA} -f backend/Dockerfile .
          docker push ghcr.io/idzumikatsu/trash/backend:${GITHUB_SHA}
          docker build -t ghcr.io/idzumikatsu/trash/frontend:${GITHUB_SHA} -f frontend/Dockerfile frontend
          docker push ghcr.io/idzumikatsu/trash/frontend:${GITHUB_SHA}

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Configure kubeconfig
        run: echo "$KUBE_CONFIG_B64" | base64 -d > kubeconfig
        env:
          KUBE_CONFIG_B64: ${{ secrets.KUBE_CONFIG_B64 }}

      - name: Create ghcr.io Image Pull Secret
        run: |
          kubectl create secret docker-registry ghcr-secret \
            --namespace=schedule-ns \
            --docker-server=ghcr.io \
            --docker-username=${{ github.repository_owner }} \
            --docker-password=${{ secrets.GITHUB_TOKEN }} \
            --dry-run=client -o yaml | kubectl apply -f - --kubeconfig kubeconfig

      - name: Lint Helm chart
        run: helm lint infra/k8s/helm/schedule-app
      - name: DEBUG - Показать содержимое values-production.yaml
        run: cat infra/k8s/helm/schedule-app/values-production.yaml

      - name: Deploy with Helm
        run: |
          helm uninstall schedule-app --namespace default --no-hooks || echo "Release 'schedule-app' not found, continuing."

          helm upgrade --install schedule-app-v2 infra/k8s/helm/schedule-app \
            -f infra/k8s/helm/schedule-app/values-production.yaml \
            --set postgresql.service.port=5432 \
            --set-string global.imagePullSecrets[0].name=ghcr-secret \
            --create-namespace --namespace schedule-ns \
            --set image.tag=${GITHUB_SHA} \
            --set frontend.tag=${GITHUB_SHA} \
            --kubeconfig kubeconfig \
            --wait --timeout 10m
