{{- if .Values.rabbitmq.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "schedule-app.fullname" . }}-rabbitmq
  labels:
    {{- include "schedule-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: rabbitmq
spec:
  serviceName: {{ include "schedule-app.fullname" . }}-rabbitmq
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "schedule-app.fullname" . }}-rabbitmq
  template:
    metadata:
      labels:
        app: {{ include "schedule-app.fullname" . }}-rabbitmq
        {{- include "schedule-app.labels" . | nindent 8 }}
        app.kubernetes.io/component: rabbitmq
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      containers:
        - name: rabbitmq
          image: {{ .Values.rabbitmq.image }}
          ports:
            - containerPort: {{ .Values.rabbitmq.port }}
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "schedule-app.fullname" . }}
                  key: rabbitmq-user
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "schedule-app.fullname" . }}
                  key: rabbitmq-password
          livenessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "-q", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "-q", "ping"]
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.rabbitmq.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.rabbitmq.persistence.size }}
{{- end }}

