name: schedule-app
services:
  db:
    # Fresh PostgreSQL instance
    image: postgres:16.2
    env_file: ./.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
  app:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file: ./.env
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      JWT_SECRET: ${JWT_SECRET}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "8080:8080"


  nginx:
    image: nginx:alpine
    depends_on:
      app:
        condition: service_healthy
    restart: unless-stopped
    env_file: ./.env
    environment:
      APP_HOST: ${APP_HOST}
      APP_PORT: ${APP_PORT}
      SERVER_NAME: ${SERVER_NAME}
    entrypoint: >
      /bin/sh -c "
        envsubst '\$${APP_HOST} \$${APP_PORT} \$${SERVER_NAME}' \
          < /etc/nginx/templates/nginx.conf.template \
          > /etc/nginx/conf.d/default.conf &&
        exec nginx -g 'daemon off;'
      "
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/templates/nginx.conf.template:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/www:/var/www/certbot:ro
    ports:
      - "80:80"
      - "443:443"

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:1.1.0
    depends_on:
      - nginx
    restart: unless-stopped
    command:
      - --nginx.scrape-uri=http://nginx/nginx_status
    ports:
      - "9114:9113"

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
